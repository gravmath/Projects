/*maxima program for Pauli matrices*/


compose_matrix_2d(list) := (
  block([id2,sigma_x,sigma_y,sigma_z,M],
         id2         : matrix([1,0],[0,1]),
		 sigma_x     : matrix([0,1],[1,0]),
		 sigma_y     : matrix([0,-%i],[%i,0]),
		 sigma_z     : matrix([1,0],[0,-1]),
		 
		 M : map(ratsimp,list[1]*id2 + list[2]*sigma_x + list[3]*sigma_y + list[4]*sigma_z)
       )
)$

decompose_matrix_2d(M) := (
  block([id2,sigma_x,sigma_y,sigma_z,spec],
         id2         : matrix([1,0],[0,1]),
		 sigma_x     : matrix([0,1],[1,0]),
		 sigma_y     : matrix([0,-%i],[%i,0]),
		 sigma_z     : matrix([1,0],[0,-1]),
		 spec        : [0,0,0,0],
		 spec[1]     : ratsimp(matrix_trace_2d( id2     . M )/2),
		 spec[2]     : ratsimp(matrix_trace_2d( sigma_x . M )/2),
		 spec[3]     : ratsimp(matrix_trace_2d( sigma_y . M )/2),
		 spec[4]     : ratsimp(matrix_trace_2d( sigma_z . M )/2),
		 spec
       )
)$
  
mult_quats(q1,q2) := (
  block([local_q1,local_q2,m_q1,m_q2,quat_prod],
        local_q1    : [q1[1],%i*q1[4],%i*q1[3],%i*q1[2]],
        local_q2    : [q2[1],%i*q2[4],%i*q2[3],%i*q2[2]],
		m_q1        : compose_matrix_2d(local_q1),
		m_q2        : compose_matrix_2d(local_q2),		
		temp        : decompose_matrix_2d( m_q1 . m_q2 ),
		quat_prod   : map(ratsimp,[temp[1],temp[4]/%i,temp[3]/%i,temp[2]/%i])
       )
)$	   
  
matrix_trace_2d(M) := (
  block( result : M[1,1] + M[2,2] )
)$

dot(a,b) := ( 
  block([q,i],
        q : 0,
        q
	   )
)$